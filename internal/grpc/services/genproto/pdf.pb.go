// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0--rc2
// source: pdf.proto

package pdf_ocr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pdf struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pdf) Reset() {
	*x = Pdf{}
	mi := &file_pdf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pdf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pdf) ProtoMessage() {}

func (x *Pdf) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pdf.ProtoReflect.Descriptor instead.
func (*Pdf) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{0}
}

func (x *Pdf) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Pdf) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type AddPdfRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPdfRequest) Reset() {
	*x = AddPdfRequest{}
	mi := &file_pdf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPdfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPdfRequest) ProtoMessage() {}

func (x *AddPdfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPdfRequest.ProtoReflect.Descriptor instead.
func (*AddPdfRequest) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{1}
}

func (x *AddPdfRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type AddPdfResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPdfResponse) Reset() {
	*x = AddPdfResponse{}
	mi := &file_pdf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPdfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPdfResponse) ProtoMessage() {}

func (x *AddPdfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPdfResponse.ProtoReflect.Descriptor instead.
func (*AddPdfResponse) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{2}
}

func (x *AddPdfResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_pdf_proto protoreflect.FileDescriptor

const file_pdf_proto_rawDesc = "" +
	"\n" +
	"\tpdf.proto\")\n" +
	"\x03Pdf\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x12\n" +
	"\x04Path\x18\x02 \x01(\tR\x04Path\"#\n" +
	"\rAddPdfRequest\x12\x12\n" +
	"\x04Path\x18\x01 \x01(\tR\x04Path\"$\n" +
	"\x0eAddPdfResponse\x12\x12\n" +
	"\x04Text\x18\x01 \x01(\tR\x04Text29\n" +
	"\n" +
	"PdfService\x12+\n" +
	"\x06AddPdf\x12\x0e.AddPdfRequest\x1a\x0f.AddPdfResponse\"\x00B\x1eZ\x1cgithub.com/yrnThiago/pdf-ocrb\x06proto3"

var (
	file_pdf_proto_rawDescOnce sync.Once
	file_pdf_proto_rawDescData []byte
)

func file_pdf_proto_rawDescGZIP() []byte {
	file_pdf_proto_rawDescOnce.Do(func() {
		file_pdf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pdf_proto_rawDesc), len(file_pdf_proto_rawDesc)))
	})
	return file_pdf_proto_rawDescData
}

var file_pdf_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pdf_proto_goTypes = []any{
	(*Pdf)(nil),            // 0: Pdf
	(*AddPdfRequest)(nil),  // 1: AddPdfRequest
	(*AddPdfResponse)(nil), // 2: AddPdfResponse
}
var file_pdf_proto_depIdxs = []int32{
	1, // 0: PdfService.AddPdf:input_type -> AddPdfRequest
	2, // 1: PdfService.AddPdf:output_type -> AddPdfResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pdf_proto_init() }
func file_pdf_proto_init() {
	if File_pdf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pdf_proto_rawDesc), len(file_pdf_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pdf_proto_goTypes,
		DependencyIndexes: file_pdf_proto_depIdxs,
		MessageInfos:      file_pdf_proto_msgTypes,
	}.Build()
	File_pdf_proto = out.File
	file_pdf_proto_goTypes = nil
	file_pdf_proto_depIdxs = nil
}
